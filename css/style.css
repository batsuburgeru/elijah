@charset "utf-8";
@font-face {
		font-family: 'Everett';
		src: url('../fonts/everett-regular-webfont.woff2') format('woff2'), url('../fonts/everett-regular-webfont.woff') format('woff'), url('../fonts/everett-regular-webfont.ttf') format('truetype');
		font-weight: normal;
		font-style: normal;
		font-display: swap;
}
@font-face {
		font-family: 'Anton';
		src: url('../fonts/anton-regular-webfont.woff2') format('woff2'), url('../fonts/anton-regular-webfont.woff') format('woff'), url('../fonts/anton-regular-webfont.ttf') format('truetype');
		font-weight: normal;
		font-style: normal;
		font-display: swap;
}
:root {
		font-size: 0.833333vw;
		--font: "Everett", -apple-system, system-ui, "sans-serif";
		--font-anton: "Anton", -apple-system, system-ui, "sans-serif";
		--black: #212121;
		--grey: #9E9E9E;
		--white: #F2F2F2;
		--yellow: #E3D316;
		--pink: #FE4890;
}
@media only screen and (min-width: 1920px) {
		:root {
				font-size: 16px;
		}
}
html, body {
		height: 100%;
		box-sizing: border-box;
		text-rendering: optimizeLegibility !important;
		-webkit-font-smoothing: antialiased;
}
body {
		margin: 0;
		padding: 0;
		background: var(--white);
		font: normal 12px/14px var(--font);
		text-transform: uppercase;
		color: var(--black);
		-webkit-text-size-adjust: none;
		display: flex;
		flex-direction: column;
}
*, *:before, *:after {
		box-sizing: border-box;
}
form, fieldset {
		margin: 0;
		padding: 0;
		border: 0;
}
video {
		-webkit-mask-image: -webkit-radial-gradient(white, black);
		-webkit-backface-visibility: hidden;
		-moz-backface-visibility: hidden;
}
header, nav, section, article, aside, footer, menu, time, figure, figcaption, main {
		display: block;
}
img, svg, picture {
		border: 0;
		vertical-align: top;
}
a {
		color: inherit;
		text-decoration: none;
		outline: none;
		cursor: pointer;
}
.mfp-hide {
		display: none !important;
}
.mfp-preloader {
		top: 0 !important;
		left: 0 !important;
		right: 0 !important;
		overflow: hidden !important;
		text-align: left !important;
		text-indent: -100vw !important;
		height: 2px;
		background: var(--black);
		transform-origin: 0 50%;
		transform: scale(0, 1);
		margin: 0 !important;
		animation: preloader 1s linear forwards;
}
.mfp-indexWork .mfp-preloader {
		background: var(--white);
}
@-webkit-keyframes preloader {
		from {
				transform: scale(0, 1);
		}
		to {
				transform: scale(1, 1);
		}
}
@keyframes preloader {
		from {
				transform: scale(0, 1);
		}
		to {
				transform: scale(1, 1);
		}
}
.swiper {
		overflow: hidden;
}
.swiper-wrapper {
		display: flex;
}
.swiper-slide {
		flex: 0 0 auto;
}
.mainwrap {
		flex: 0 0 auto;
		width: 100%;
		min-height: 100%;
		position: relative;
		overflow: hidden;
		display: flex;
		flex-direction: column;
}
.content {
		flex: 1 0 auto;
}
.container {
		flex: 0 0 auto;
		width: 100%;
		margin: 0 auto;
}
@media only screen and (max-width: 1023px) {
		.container {
				padding-left: 20px;
				padding-right: 20px;
		}
}
.header {
		position: fixed;
		top: 0;
		width: 100%;
		z-index: 100;
		--color: var(--black);
		color: var(--color);
}
@media only screen and (max-width: 767px) {
		.header {
				font-size: 14px;
				line-height: 17px;
		}
}
.header:before, .header .bg {
		pointer-events: none;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 110px;
		background: linear-gradient(to bottom, rgba(242, 242, 242, 1) 0%, rgba(242, 242, 242, 0) 100%);
		transition: opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.header:before {
		content: '';
}
.header .container {
		position: relative;
}
@media only screen and (max-width: 767px) {
		.header {
				height: 54px;
				font-size: 12px;
				line-height: 14px;
		}
}
.header .logo {
		flex: 0 0 auto;
		position: relative;
		z-index: 10;
		height: 16px;
		margin-right: auto;
}
.header .logo svg {
		fill: var(--color);
		height: 100%;
		width: auto;
		transition: fill 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
}
@media (pointer:fine) {
		.header a.logo:hover svg {
				fill: var(--grey);
		}
}
@media only screen and (max-width: 1023px) {
		.header .logo, .header .toggle-menu, .header .index-view {
				backface-visibility: hidden;
				transform: translate3d(0, -30px, 0);
				opacity: 0;
				transition-property: transform, opacity;
				transition-duration: 1s, 0.5s;
				transition-timing-function: ease;
				transition-delay: 0.5s;
		}
		html.loaded .header .logo, html.loaded .header .toggle-menu, html.loaded .header .index-view {
				opacity: 1;
				transform: translate3d(0, 0, 0);
		}
		.toggle-menu {
				-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				flex: 0 0 auto;
				cursor: pointer;
				user-select: none;
				align-self: stretch;
				display: flex;
				align-items: center;
				justify-content: center;
				flex-direction: column;
				gap: 6px;
				margin: 0 -20px 0 auto;
				padding: 0 20px;
				margin-left: 4px;
				position: relative;
				z-index: 10;
		}
		.toggle-menu:before, .toggle-menu:after {
				content: '';
				flex: 0 0 auto;
				width: 17px;
				height: 1px;
				background: var(--color);
				backface-visibility: hidden;
				transform: translate3d(0, 0, 0) rotate(0deg);
				transition-property: transform, background;
				transition-duration: 0.2s;
				transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
		}
		@media (pointer:fine) {
				.toggle-menu:hover:before, .toggle-menu:hover:after {
						background-color: var(--grey);
				}
		}
		html.open-menu {
				overflow: hidden;
		}
		.open-menu .toggle-menu:before {
				transform: translate3d(0, 3.5px, 0) rotate(-135deg);
		}
		.open-menu .toggle-menu:after {
				transform: translate3d(0, -3.5px, 0) rotate(135deg);
		}
		.open-menu .toggle-menu:before, .open-menu .toggle-menu:after {
				background-color: var(--black);
		}
		.open-menu .header .logo svg {
				fill: var(--black) !important;
				transition-delay: 0.25s;
		}
		.menu {
				position: fixed;
				top: 0;
				left: 100%;
				width: 100%;
				height: 100%;
				overflow: hidden;
				background: var(--yellow);
				font: normal 26rem/0.92 var(--font-anton);
				letter-spacing: -0.02em;
				text-transform: uppercase;
				padding: 3.2rem;
				transform: translate3d(0, 0, 0);
				backface-visibility: hidden;
				transition: transform 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
				--delay: 0.5s;
				display: flex;
				flex-direction: column;
				justify-content: flex-end;
				align-items: flex-end;
				gap: 0.1em;
				color: var(--black);
		}
		.open-menu .menu {
				transform: translate3d(-100%, 0, 0);
		}
		.menu > * {
				display: flex;
		}
		.menu > *:first-child {
				align-self: flex-start;
		}
		.menu > * span {
				display: inline-block;
				vertical-align: top;
				overflow: hidden;
		}
		.menu > * > span {
				margin: -0.2em 0;
		}
		.menu > * span span {
				backface-visibility: hidden;
				transition: transform 1s ease;
				transform: translate3d(0, -100%, 0);
				padding: 0.2em 0;
				transition-delay: calc(0.75s + var(--delay));
				min-width: calc(0.5ch - 0.02em);
				text-align: center;
		}
		.open-menu .menu > * span span {
				transform: translate3d(0, 0, 0);
		}
		html:not(.open-menu) .menu > * span span {
				transition-delay: 0.5s !important;
		}
		.menu > * span:nth-child(1) span {
				transition-delay: calc(0s + var(--delay));
		}
		.menu > * span:nth-child(2) span {
				transition-delay: calc(0.05s + var(--delay));
		}
		.menu > * span:nth-child(3) span {
				transition-delay: calc(0.1s + var(--delay));
		}
		.menu > * span:nth-child(4) span {
				transition-delay: calc(0.15s + var(--delay));
		}
		.menu > * span:nth-child(5) span {
				transition-delay: calc(0.2s + var(--delay));
		}
		.menu > * span:nth-child(6) span {
				transition-delay: calc(0.25s + var(--delay));
		}
		.menu > * span:nth-child(7) span {
				transition-delay: calc(0.3s + var(--delay));
		}
		.menu > * span:nth-child(8) span {
				transition-delay: calc(0.35s + var(--delay));
		}
		.menu > * span:nth-child(9) span {
				transition-delay: calc(0.4s + var(--delay));
		}
		.menu > * span:nth-child(10) span {
				transition-delay: calc(0.45s + var(--delay));
		}
		.menu > * span:nth-child(11) span {
				transition-delay: calc(0.5s + var(--delay));
		}
		.menu > * span:nth-child(12) span {
				transition-delay: calc(5.5s + var(--delay));
		}
		.menu > * span:nth-child(13) span {
				transition-delay: calc(0.6s + var(--delay));
		}
		.menu > * span:nth-child(14) span {
				transition-delay: calc(0.65s + var(--delay));
		}
		.menu > * span:nth-child(15) span {
				transition-delay: calc(0.7s + var(--delay));
		}
}
.menu a {
		text-decoration: none;
		color: inherit;
		transition: color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.header-white {
		--color: var(--white);
}
.header-white:before {
		background: linear-gradient(to bottom, rgba(33, 33, 33, 0.6) 0%, rgba(33, 33, 33, 0) 100%);
}
.index-view {
		flex: 0 0 auto;
		min-width: 24.25%;
		display: flex;
		gap: 8px 20px;
}
.index-view .logo {
		margin-right: auto;
}
.index-view .link {
		flex: 0 0 auto;
		cursor: pointer;
		user-select: none;
		transition: color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
		position: relative;
		top: 0.1em;
}
@media (pointer:fine) {
		.index-view .link:hover {
				color: var(--grey);
		}
}
.index-view .link.active {
		cursor: default;
		color: var(--grey);
		pointer-events: none;
}
@media only screen and (max-width: 1023px) {
		.index-view {
				flex: 1;
				min-width: 0;
		}
}
.header .container {
		height: 100%;
		display: flex;
		align-items: center;
}
.work-descr {
		display: flex;
		flex-direction: column;
		padding: 24px 20px;
		text-align: center;
		text-transform: uppercase;
		color: var(--black);
		--delay: 0s;
}
.work-descr .name {
		margin: auto 0;
		line-height: 0.943;
		--size: 1;
		font-size: calc(7rem * var(--size));
		padding-bottom: 0.5em;
}
@media only screen and (max-width: 767px) {
		.work-descr .name {
				font-size: calc(60px * var(--size));
		}
		.work-descr .name.size-soot {
				font-size: calc(40px * var(--size));
		}
		.work-descr .name.size-time, .work-descr .name.size-one, .work-descr .name.size-mystical {
				font-size: calc(28px * var(--size));
		}
}
@media only screen and (min-width: 768px) and (max-width: 1023px) {
		.work-descr .name {
				font-size: calc(64px * var(--size));
		}
		.work-descr .name.size-soot {
				font-size: calc(48px * var(--size));
		}
		.work-descr .name.size-time, .work-descr .name.size-one, .work-descr .name.size-mystical {
				font-size: calc(40px * var(--size));
		}
}
@media only screen and (min-width: 1024px) {
		.work-descr .name {
				font-size: calc(7rem * var(--size));
		}
		.work-descr .name.size-time, .work-descr .name.size-one, .work-descr .name.size-mystical {
				font-size: calc(4.375rem * var(--size));
		}
}
.work-descr .label {
		color: var(--grey);
		margin: 0 0 1px 0;
}
.work-descr .label:not(:first-child) {
		margin-top: 8px;
}
.work-descr .name span, .work-descr .bottom span {
		display: inline-block;
		vertical-align: top;
}
.work-descr .name > *, .work-descr .bottom > * {
		overflow: hidden;
		margin: -0.1em 0;
		transform: translateZ(0);
		backface-visibility: hidden;
}
.work-descr .name > * > *, .work-descr .bottom > * > * {
		backface-visibility: hidden;
		transition: transform 1s ease;
		transform: translate3d(0, -100%, 0);
		padding: 0.1em 0;
		transition-delay: calc(2s + var(--delay));
}
.work-descr .name > *:nth-child(1) > *, .work-descr .bottom > *:nth-child(1) > * {
		transition-delay: calc(0s + var(--delay));
}
.work-descr .name > *:nth-child(2) > *, .work-descr .bottom > *:nth-child(2) > * {
		transition-delay: calc(0.1s + var(--delay));
}
.work-descr .name > *:nth-child(3) > *, .work-descr .bottom > *:nth-child(3) > * {
		transition-delay: calc(0.2s + var(--delay));
}
.work-descr .name > *:nth-child(4) > *, .work-descr .bottom > *:nth-child(4) > * {
		transition-delay: calc(0.3s + var(--delay));
}
.work-descr .name > *:nth-child(5) > *, .work-descr .bottom > *:nth-child(5) > * {
		transition-delay: calc(0.4s + var(--delay));
}
.work-descr .name > *:nth-child(6) > *, .work-descr .bottom > *:nth-child(6) > * {
		transition-delay: calc(0.5s + var(--delay));
}
.work-descr .name > *:nth-child(7) > *, .work-descr .bottom > *:nth-child(7) > * {
		transition-delay: calc(0.6s + var(--delay));
}
.work-descr .name > *:nth-child(8) > *, .work-descr .bottom > *:nth-child(8) > * {
		transition-delay: calc(0.7s + var(--delay));
}
.work-descr .name > *:nth-child(9) > *, .work-descr .bottom > *:nth-child(9) > * {
		transition-delay: calc(0.8s + var(--delay));
}
.work-descr .name > *:nth-child(10) > *, .work-descr .bottom > *:nth-child(10) > * {
		transition-delay: calc(0.9s + var(--delay));
}
.work-descr .name > *:nth-child(11) > *, .work-descr .bottom > *:nth-child(11) > * {
		transition-delay: calc(1s + var(--delay));
}
.work-descr .name > *:nth-child(12) > *, .work-descr .bottom > *:nth-child(12) > * {
		transition-delay: calc(1.1s + var(--delay));
}
.work-descr .name > *:nth-child(13) > *, .work-descr .bottom > *:nth-child(13) > * {
		transition-delay: calc(1.2s + var(--delay));
}
.work-descr .name > *:nth-child(14) > *, .work-descr .bottom > *:nth-child(14) > * {
		transition-delay: calc(1.3s + var(--delay));
}
.work-descr .name > *:nth-child(15) > *, .work-descr .bottom > *:nth-child(15) > * {
		transition-delay: calc(1.4s + var(--delay));
}
.work-descr .name > *:nth-child(16) > *, .work-descr .bottom > *:nth-child(16) > * {
		transition-delay: calc(1.5s + var(--delay));
}
.work-descr .name > *:nth-child(17) > *, .work-descr .bottom > *:nth-child(17) > * {
		transition-delay: calc(1.6s + var(--delay));
}
.work-descr .name > *:nth-child(18) > *, .work-descr .bottom > *:nth-child(18) > * {
		transition-delay: calc(1.7s + var(--delay));
}
.work-descr .name > *:nth-child(19) > *, .work-descr .bottom > *:nth-child(19) > * {
		transition-delay: calc(1.8s + var(--delay));
}
.work-descr .name > *:nth-child(20) > *, .work-descr .bottom > *:nth-child(20) > * {
		transition-delay: calc(1.9s + var(--delay));
}
.swiper-slide:not(.swiper-slide-active) .work-descr .name > * > *, .swiper-slide:not(.swiper-slide-active) .work-descr .bottom > * > * {
		transition-delay: 0.5s !important;
		transition-duration: 0.45s;
}
.swiper-slide-active .work-descr .name > * > *, .swiper-slide-active .work-descr .bottom > * > *, .work-modal.ready .work-descr .name > * > *, .work-modal.ready .work-descr .bottom > * > * {
		transform: translate3d(0, 0, 0);
}
html.page-start, html.hiding {
		overflow: hidden;
}
.page-cover {
		position: fixed;
		z-index: 500;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: var(--white);
		transition-property: transform, opacity;
		transition-duration: 1s, 0.2s;
		transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
		transform: translate3d(0, 0, 0);
		backface-visibility: hidden;
		box-shadow: 2.64407px 1.98305px 3.9661px rgba(0, 0, 0, 0.16);
}
.page-cover .line {
		position: absolute;
		top: 0;
		left: 0;
		height: 2px;
		background: var(--black);
		transition-property: transform, opacity;
		transition-duration: 6s, 0.2s;
		transition-timing-function: linear;
		opacity: 0;
		transform-origin: 0 50%;
		transform: scale(0, 1);
}
.page-cover .text {
		white-space: nowrap;
		position: absolute;
		bottom: 0;
		left: 0;
		font-size: 32px;
		line-height: 1;
		padding: 20px;
		transform: translate3d(-1em, 0, 0);
		transition-property: transform, opacity;
		transition-duration: 6s, 0.5s;
		transition-timing-function: linear, cubic-bezier(0.645, 0.045, 0.355, 1);
		opacity: 0;
		min-width: calc(4ch + 40px);
		text-align: right;
}
.page-cover.first-time .line {
		transform: scale(1, 1);
}
.page-cover.first-time .text {
		transform: translate3d(calc(100vw - 100%), 0, 0);
}
.page-cover.first-time .line, .page-cover.first-time .text {
		opacity: 1;
}
html.loaded .page-cover {
		transform: translate3d(0, -100%, 0);
		opacity: 0;
		transition-delay: 0s, 1s;
}
html.hiding .page-cover {
		transform: translate3d(0, 0, 0);
		opacity: 1;
		transition-delay: 0s;
}
.mfp-work .work-modal, .mfp-work .modal-help {
		opacity: 0;
		transition: opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.mfp-work.mfp-ready .work-modal, .mfp-work.mfp-ready .modal-help {
		opacity: 1;
}
.mfp-work.mfp-removing .work-modal, .mfp-work.mfp-removing .modal-help {
		opacity: 0;
}
.mfp-work.mfp-bg {
		opacity: 0;
		transition: opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
		background: var(--white);
}
.mfp-work.mfp-ready.mfp-bg {
		opacity: 1;
}
.mfp-work.mfp-removing.mfp-bg {
		opacity: 0;
}
.mfp-indexWork.mfp-bg {
		backface-visibility: hidden;
		background: rgba(0, 0, 0, 0.6);
		backdrop-filter: blur(42px);
		-webkit-backdrop-filter: blur(42px);
}
.work-modal {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: flex;
		--color: var(--black);
		color: var(--color);
		overflow: hidden;
}
.mfp-indexWork .work-modal {
		--color: var(--white);
}
.mfp-indexWork .work-modal .work-descr .prev, .mfp-indexWork .work-modal .work-descr .next {
		display: none !important;
}
.work-modal > input {
		position: absolute;
		transform: scale(0);
		opacity: 0;
		visibility: hidden;
}
.work-modal .image {
		display: flex;
		gap: 10px;
		flex: 1;
		position: relative;
		overflow: hidden;
		backface-visibility: hidden;
		will-change: transform;
		transition: transform 1s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.work-modal.ready .image {
		transform: translate3d(0, 0, 0) !important;
}
.work-modal .image .swipe-text {
		font-weight: normal;
		font-size: 12px;
		line-height: 14px;
		white-space: nowrap;
		position: absolute;
		bottom: 24px;
		left: 50%;
		transform: translate3d(-50%, 0, 0);
		pointer-events: none;
		backface-visibility: hidden;
		transition: opacity 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
		padding: 8px 16px;
		background: var(--black);
		color: var(--white);
}
.work-modal.zoomed .image .swipe-text {
		opacity: 0 !important;
}
.work-modal .image.end .swipe-text {
		opacity: 0;
}
.work-modal .image .swipe-text:after {
		content: '';
		display: inline-block;
		vertical-align: middle;
		background: url("../img/swipe-arrow-white.svg") no-repeat 50% 50%;
		background-size: contain;
		width: 34px;
		height: 8px;
		margin: 0 0 0 8px;
		position: relative;
		top: -1px;
		backface-visibility: hidden;
		will-change: transform;
		animation: swipe-text 0.5s linear infinite alternate;
}
.work-modal .image .draggable {
		flex: 0 0 auto;
		width: 100%;
		height: 100%;
}
.work-modal .image .draggable > div {
		height: 100%;
		width: auto;
}
.work-modal .image .draggable img {
		height: 100%;
		width: auto;
		max-width: none;
		max-height: none;
}
.work-modal .image > span {
		cursor: zoom-out;
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		background-repeat: no-repeat;
		background-position: 50% 50%;
}
.work-modal .image > *:not(span) {
		flex: 1;
		overflow: hidden;
		display: flex;
		align-items: center;
		justify-content: center;
}
@media (pointer:coarse) {
		.work-modal.zoomed .image > *:not(span) {
				overflow: auto;
				-ms-overflow-style: none;
				scrollbar-width: none;
		}
		.work-modal .image > *:not(span)::-webkit-scrollbar {
				display: none;
		}
}
.work-modal .image img {
		flex: 0 0 auto;
		width: auto;
		max-width: 100%;
		height: 100%;
		cursor: zoom-in;
		object-fit: cover;
		object-position: center;
}
.work-modal .image.wide img {
		height: auto;
		max-height: 100%;
}
.work-modal.zoomed .image {
		border-width: 0 !important;
		transition: none !important;
		position: absolute;
		top: 0;
		left: 0;
		width: 100% !important;
		height: 100% !important;
		margin: 0 !important;
		padding: 0 !important;
		z-index: 10;
}
.work-modal.zoomed .work-descr, .work-modal.zoomed .tabs {
		transition: none !important;
		opacity: 0 !important;
		pointer-events: none !important;
}
.work-modal.zoomed .image img {
		max-width: none;
		max-height: none;
		width: auto !important;
		height: auto !important;
		cursor: zoom-out;
}
.work-modal .work-descr {
		position: relative;
}
.work-modal .work-descr .prev, .work-modal .work-descr .next {
		cursor: pointer;
		position: absolute;
		bottom: 0;
		width: 24px;
		height: 24px;
		user-select: none;
		background-repeat: no-repeat;
		background-position: 50% 50%;
		background-size: auto 20px;
		margin: -2px;
		margin: 18px;
}
.work-modal .work-descr .prev svg, .work-modal .work-descr .next svg {
		width: 20px;
		height: 20px;
		position: absolute;
		top: 50%;
		left: 50%;
		margin: -10px;
		fill: var(--black);
		transition: fill 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
}
@media (pointer:fine) {
		.work-modal .work-descr .prev:hover svg, .work-modal .work-descr .next:hover svg {
				fill: var(--grey);
		}
}
.work-modal .work-descr .prev {
		left: 0;
}
.work-modal .work-descr .next {
		right: 0;
}
.work-modal .work-descr {
		flex: 0 0 auto;
		color: var(--color);
}
.work-modal .close {
		position: absolute;
		top: 0;
		right: 0;
		cursor: pointer;
		user-select: none;
		font-size: 14px;
		line-height: 17px;
		text-transform: uppercase;
		margin: 20px;
		color: var(--color);
		transform: translate3d(calc(100% + 34px), 0, 0);
		z-index: 10;
		mix-blend-mode: difference;
}
@media (pointer:fine) {
		.work-modal .close:hover {
				color: var(--grey);
		}
}
.work-modal .tabs {
		position: absolute;
		top: 0;
		left: 0;
		margin: 20px;
		font-size: 14px;
		line-height: 17px;
		text-transform: uppercase;
		display: flex;
		flex-wrap: wrap;
		align-items: flex-start;
		gap: 4px 20px;
		transform: translate3d(0, calc(-100% - 34px), 0);
}
.work-modal .close, .work-modal .tabs {
		transition-property: transform, opacity, color;
		transition-duration: 0.75s, 0.2s, 0.2s;
		transition-timing-function: ease;
		backface-visibility: hidden;
		will-change: transform;
		opacity: 0;
}
.work-modal.ready .close, .work-modal.ready .tabs {
		transform: translate3d(0, 0, 0);
		opacity: 1;
}
.work-modal .tabs > * {
		flex: 0 0 auto;
		cursor: pointer;
		user-select: none;
		transition: color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
		color: var(--grey);
}
.work-modal input#modal-work-all:checked ~ .tabs label[for="modal-work-all"], .work-modal input#modal-work1:checked ~ .tabs label[for="modal-work1"], .work-modal input#modal-work2:checked ~ .tabs label[for="modal-work2"] {
		color: var(--color);
		cursor: default;
}
.work-modal input#modal-work1:checked ~ .image > *:not(span):not(:nth-child(1)), .work-modal input#modal-work2:checked ~ .image > *:not(span):not(:nth-child(2)) {
		display: none;
}
.work-modal input#modal-work-all:checked ~ .image {
		pointer-events: none;
}
@media only screen and (max-width: 767px) {
		.work-modal {
				flex-direction: column-reverse;
		}
		.work-modal .image {
				transform: translate3d(0, 100%, 0);
		}
		.work-modal .work-descr {
				min-height: 50%;
				padding: 40px 20px 20px 20px;
		}
}
@-webkit-keyframes swipe-text {
		from {
				transform: translate3d(0, 0, 0);
		}
		to {
				transform: translate3d(5px, 0, 0);
		}
}
@keyframes swipe-text {
		from {
				transform: translate3d(0, 0, 0);
		}
		to {
				transform: translate3d(5px, 0, 0);
		}
}
.modal-help {
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate3d(-50%, -50%, 0);
		background: var(--white);
		box-shadow: inset 0 3px 0 #0043FF, inset 0 6px 0 #FFE426;
		text-align: center;
		padding: 16px;
		font-size: 12px;
		line-height: 14px;
		color: var(--black);
		width: 686px;
		max-width: calc(100vw - 40px);
}
@media only screen and (max-width: 767px) {
		.modal-help {
				box-shadow: inset inset 0 2px 0 #0043FF, inset 0 4px 0 #FFE426;
		}
}
@media only screen and (min-width: 1440px) {
		.modal-help {
				box-shadow: inset inset 0 4px 0 #0043FF, inset 0 8px 0 #FFE426;
		}
}
.modal-help .close {
		cursor: pointer;
		user-select: none;
		position: absolute;
		top: 0;
		right: 0;
		margin: 16px;
		transition: color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
}
@media (pointer:fine) {
		.modal-help .close:hover {
				color: var(--grey);
		}
}
.modal-help .top {
		text-align: left;
}
.modal-help .center {
		font-size: 64px;
		line-height: 0.92;
		letter-spacing: -0.05em;
		margin: 70px 0;
}
.modal-help .bottom {
		margin: 0 auto;
		max-width: 38.333333em;
}
.modal-help a {
		display: inline-block;
		vertical-align: top;
		position: relative;
		color: var(--grey);
}
.modal-help a:after {
		content: '';
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		height: 0.05em;
		background: var(--grey);
		transform-origin: 100% 0;
		transform: scale(0, 1);
		transition: transform 0.75s ease;
		transition-delay: 0.3s;
}
.mfp-ready .modal-help a:after {
		transform: scale(1, 1);
}
@media (pointer:fine) {
		.mfp-ready .modal-help a:hover:after {
				transform: scale(1, 0);
				transition-duration: 0.3s;
				transition-delay: 0s;
		}
}
@media (pointer:coarse) {
		html.open-modal {
				overflow: hidden;
		}
}